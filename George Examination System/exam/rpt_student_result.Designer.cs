//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace exam {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("rpt_student_result")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class rpt_student_result : global::System.Data.DataSet {
        
        private dt_student_resultDataTable tabledt_student_result;
        
        private dt_student_result_detailsDataTable tabledt_student_result_details;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public rpt_student_result() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected rpt_student_result(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dt_student_result"] != null)) {
                    base.Tables.Add(new dt_student_resultDataTable(ds.Tables["dt_student_result"]));
                }
                if ((ds.Tables["dt_student_result_details"] != null)) {
                    base.Tables.Add(new dt_student_result_detailsDataTable(ds.Tables["dt_student_result_details"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_student_resultDataTable dt_student_result {
            get {
                return this.tabledt_student_result;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dt_student_result_detailsDataTable dt_student_result_details {
            get {
                return this.tabledt_student_result_details;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            rpt_student_result cln = ((rpt_student_result)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dt_student_result"] != null)) {
                    base.Tables.Add(new dt_student_resultDataTable(ds.Tables["dt_student_result"]));
                }
                if ((ds.Tables["dt_student_result_details"] != null)) {
                    base.Tables.Add(new dt_student_result_detailsDataTable(ds.Tables["dt_student_result_details"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledt_student_result = ((dt_student_resultDataTable)(base.Tables["dt_student_result"]));
            if ((initTable == true)) {
                if ((this.tabledt_student_result != null)) {
                    this.tabledt_student_result.InitVars();
                }
            }
            this.tabledt_student_result_details = ((dt_student_result_detailsDataTable)(base.Tables["dt_student_result_details"]));
            if ((initTable == true)) {
                if ((this.tabledt_student_result_details != null)) {
                    this.tabledt_student_result_details.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "rpt_student_result";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/rpt_student_result.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledt_student_result = new dt_student_resultDataTable();
            base.Tables.Add(this.tabledt_student_result);
            this.tabledt_student_result_details = new dt_student_result_detailsDataTable();
            base.Tables.Add(this.tabledt_student_result_details);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedt_student_result() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedt_student_result_details() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            rpt_student_result ds = new rpt_student_result();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dt_student_resultRowChangeEventHandler(object sender, dt_student_resultRowChangeEvent e);
        
        public delegate void dt_student_result_detailsRowChangeEventHandler(object sender, dt_student_result_detailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_student_resultDataTable : global::System.Data.TypedTableBase<dt_student_resultRow> {
            
            private global::System.Data.DataColumn columnuser_name;
            
            private global::System.Data.DataColumn columnexam_no;
            
            private global::System.Data.DataColumn columntest_no;
            
            private global::System.Data.DataColumn columnsum_correct_ans;
            
            private global::System.Data.DataColumn columnsum_wrong_ans;
            
            private global::System.Data.DataColumn columnno_of_ques;
            
            private global::System.Data.DataColumn columnexam_name;
            
            private global::System.Data.DataColumn columntest_name;
            
            private global::System.Data.DataColumn columnuser_id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_resultDataTable() {
                this.TableName = "dt_student_result";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_student_resultDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dt_student_resultDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_nameColumn {
                get {
                    return this.columnuser_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exam_noColumn {
                get {
                    return this.columnexam_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn test_noColumn {
                get {
                    return this.columntest_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sum_correct_ansColumn {
                get {
                    return this.columnsum_correct_ans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sum_wrong_ansColumn {
                get {
                    return this.columnsum_wrong_ans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn no_of_quesColumn {
                get {
                    return this.columnno_of_ques;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exam_nameColumn {
                get {
                    return this.columnexam_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn test_nameColumn {
                get {
                    return this.columntest_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_resultRow this[int index] {
                get {
                    return ((dt_student_resultRow)(this.Rows[index]));
                }
            }
            
            public event dt_student_resultRowChangeEventHandler dt_student_resultRowChanging;
            
            public event dt_student_resultRowChangeEventHandler dt_student_resultRowChanged;
            
            public event dt_student_resultRowChangeEventHandler dt_student_resultRowDeleting;
            
            public event dt_student_resultRowChangeEventHandler dt_student_resultRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddt_student_resultRow(dt_student_resultRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_resultRow Adddt_student_resultRow(string user_name, string exam_no, string test_no, int sum_correct_ans, int sum_wrong_ans, string no_of_ques, string exam_name, string test_name, string user_id) {
                dt_student_resultRow rowdt_student_resultRow = ((dt_student_resultRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        user_name,
                        exam_no,
                        test_no,
                        sum_correct_ans,
                        sum_wrong_ans,
                        no_of_ques,
                        exam_name,
                        test_name,
                        user_id};
                rowdt_student_resultRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_student_resultRow);
                return rowdt_student_resultRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dt_student_resultDataTable cln = ((dt_student_resultDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_student_resultDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnuser_name = base.Columns["user_name"];
                this.columnexam_no = base.Columns["exam_no"];
                this.columntest_no = base.Columns["test_no"];
                this.columnsum_correct_ans = base.Columns["sum_correct_ans"];
                this.columnsum_wrong_ans = base.Columns["sum_wrong_ans"];
                this.columnno_of_ques = base.Columns["no_of_ques"];
                this.columnexam_name = base.Columns["exam_name"];
                this.columntest_name = base.Columns["test_name"];
                this.columnuser_id = base.Columns["user_id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnuser_name = new global::System.Data.DataColumn("user_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_name);
                this.columnexam_no = new global::System.Data.DataColumn("exam_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_no);
                this.columntest_no = new global::System.Data.DataColumn("test_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntest_no);
                this.columnsum_correct_ans = new global::System.Data.DataColumn("sum_correct_ans", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_correct_ans);
                this.columnsum_wrong_ans = new global::System.Data.DataColumn("sum_wrong_ans", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_wrong_ans);
                this.columnno_of_ques = new global::System.Data.DataColumn("no_of_ques", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno_of_ques);
                this.columnexam_name = new global::System.Data.DataColumn("exam_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_name);
                this.columntest_name = new global::System.Data.DataColumn("test_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntest_name);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_resultRow Newdt_student_resultRow() {
                return ((dt_student_resultRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_student_resultRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dt_student_resultRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_student_resultRowChanged != null)) {
                    this.dt_student_resultRowChanged(this, new dt_student_resultRowChangeEvent(((dt_student_resultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_student_resultRowChanging != null)) {
                    this.dt_student_resultRowChanging(this, new dt_student_resultRowChangeEvent(((dt_student_resultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_student_resultRowDeleted != null)) {
                    this.dt_student_resultRowDeleted(this, new dt_student_resultRowChangeEvent(((dt_student_resultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_student_resultRowDeleting != null)) {
                    this.dt_student_resultRowDeleting(this, new dt_student_resultRowChangeEvent(((dt_student_resultRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedt_student_resultRow(dt_student_resultRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                rpt_student_result ds = new rpt_student_result();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_student_resultDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dt_student_result_detailsDataTable : global::System.Data.TypedTableBase<dt_student_result_detailsRow> {
            
            private global::System.Data.DataColumn columnexam_no;
            
            private global::System.Data.DataColumn columntest_no;
            
            private global::System.Data.DataColumn columnsub_no;
            
            private global::System.Data.DataColumn columnexam_name;
            
            private global::System.Data.DataColumn columntest_name;
            
            private global::System.Data.DataColumn columnsub_name;
            
            private global::System.Data.DataColumn columnsum_correct_ans;
            
            private global::System.Data.DataColumn columnsum_wrong_ans;
            
            private global::System.Data.DataColumn columnno_of_ques;
            
            private global::System.Data.DataColumn columnuser_id;
            
            private global::System.Data.DataColumn columnuser_name;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_result_detailsDataTable() {
                this.TableName = "dt_student_result_details";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_student_result_detailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dt_student_result_detailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exam_noColumn {
                get {
                    return this.columnexam_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn test_noColumn {
                get {
                    return this.columntest_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sub_noColumn {
                get {
                    return this.columnsub_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn exam_nameColumn {
                get {
                    return this.columnexam_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn test_nameColumn {
                get {
                    return this.columntest_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sub_nameColumn {
                get {
                    return this.columnsub_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sum_correct_ansColumn {
                get {
                    return this.columnsum_correct_ans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn sum_wrong_ansColumn {
                get {
                    return this.columnsum_wrong_ans;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn no_of_quesColumn {
                get {
                    return this.columnno_of_ques;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_idColumn {
                get {
                    return this.columnuser_id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn user_nameColumn {
                get {
                    return this.columnuser_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_result_detailsRow this[int index] {
                get {
                    return ((dt_student_result_detailsRow)(this.Rows[index]));
                }
            }
            
            public event dt_student_result_detailsRowChangeEventHandler dt_student_result_detailsRowChanging;
            
            public event dt_student_result_detailsRowChangeEventHandler dt_student_result_detailsRowChanged;
            
            public event dt_student_result_detailsRowChangeEventHandler dt_student_result_detailsRowDeleting;
            
            public event dt_student_result_detailsRowChangeEventHandler dt_student_result_detailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddt_student_result_detailsRow(dt_student_result_detailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_result_detailsRow Adddt_student_result_detailsRow(string exam_no, string test_no, string sub_no, string exam_name, string test_name, string sub_name, int sum_correct_ans, int sum_wrong_ans, string no_of_ques, string user_id, string user_name) {
                dt_student_result_detailsRow rowdt_student_result_detailsRow = ((dt_student_result_detailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        exam_no,
                        test_no,
                        sub_no,
                        exam_name,
                        test_name,
                        sub_name,
                        sum_correct_ans,
                        sum_wrong_ans,
                        no_of_ques,
                        user_id,
                        user_name};
                rowdt_student_result_detailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdt_student_result_detailsRow);
                return rowdt_student_result_detailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dt_student_result_detailsDataTable cln = ((dt_student_result_detailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dt_student_result_detailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnexam_no = base.Columns["exam_no"];
                this.columntest_no = base.Columns["test_no"];
                this.columnsub_no = base.Columns["sub_no"];
                this.columnexam_name = base.Columns["exam_name"];
                this.columntest_name = base.Columns["test_name"];
                this.columnsub_name = base.Columns["sub_name"];
                this.columnsum_correct_ans = base.Columns["sum_correct_ans"];
                this.columnsum_wrong_ans = base.Columns["sum_wrong_ans"];
                this.columnno_of_ques = base.Columns["no_of_ques"];
                this.columnuser_id = base.Columns["user_id"];
                this.columnuser_name = base.Columns["user_name"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnexam_no = new global::System.Data.DataColumn("exam_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_no);
                this.columntest_no = new global::System.Data.DataColumn("test_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntest_no);
                this.columnsub_no = new global::System.Data.DataColumn("sub_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsub_no);
                this.columnexam_name = new global::System.Data.DataColumn("exam_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnexam_name);
                this.columntest_name = new global::System.Data.DataColumn("test_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntest_name);
                this.columnsub_name = new global::System.Data.DataColumn("sub_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsub_name);
                this.columnsum_correct_ans = new global::System.Data.DataColumn("sum_correct_ans", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_correct_ans);
                this.columnsum_wrong_ans = new global::System.Data.DataColumn("sum_wrong_ans", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsum_wrong_ans);
                this.columnno_of_ques = new global::System.Data.DataColumn("no_of_ques", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnno_of_ques);
                this.columnuser_id = new global::System.Data.DataColumn("user_id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_id);
                this.columnuser_name = new global::System.Data.DataColumn("user_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnuser_name);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_result_detailsRow Newdt_student_result_detailsRow() {
                return ((dt_student_result_detailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dt_student_result_detailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dt_student_result_detailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dt_student_result_detailsRowChanged != null)) {
                    this.dt_student_result_detailsRowChanged(this, new dt_student_result_detailsRowChangeEvent(((dt_student_result_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dt_student_result_detailsRowChanging != null)) {
                    this.dt_student_result_detailsRowChanging(this, new dt_student_result_detailsRowChangeEvent(((dt_student_result_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dt_student_result_detailsRowDeleted != null)) {
                    this.dt_student_result_detailsRowDeleted(this, new dt_student_result_detailsRowChangeEvent(((dt_student_result_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dt_student_result_detailsRowDeleting != null)) {
                    this.dt_student_result_detailsRowDeleting(this, new dt_student_result_detailsRowChangeEvent(((dt_student_result_detailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedt_student_result_detailsRow(dt_student_result_detailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                rpt_student_result ds = new rpt_student_result();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dt_student_result_detailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dt_student_resultRow : global::System.Data.DataRow {
            
            private dt_student_resultDataTable tabledt_student_result;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_student_resultRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_student_result = ((dt_student_resultDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user_name {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result.user_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_name\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.user_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string exam_no {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result.exam_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exam_no\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.exam_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string test_no {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result.test_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'test_no\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.test_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sum_correct_ans {
                get {
                    try {
                        return ((int)(this[this.tabledt_student_result.sum_correct_ansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum_correct_ans\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.sum_correct_ansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sum_wrong_ans {
                get {
                    try {
                        return ((int)(this[this.tabledt_student_result.sum_wrong_ansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum_wrong_ans\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.sum_wrong_ansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string no_of_ques {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result.no_of_quesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'no_of_ques\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.no_of_quesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string exam_name {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result.exam_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exam_name\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.exam_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string test_name {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result.test_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'test_name\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.test_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user_id {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'dt_student_result\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_nameNull() {
                return this.IsNull(this.tabledt_student_result.user_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_nameNull() {
                this[this.tabledt_student_result.user_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isexam_noNull() {
                return this.IsNull(this.tabledt_student_result.exam_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setexam_noNull() {
                this[this.tabledt_student_result.exam_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istest_noNull() {
                return this.IsNull(this.tabledt_student_result.test_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settest_noNull() {
                this[this.tabledt_student_result.test_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issum_correct_ansNull() {
                return this.IsNull(this.tabledt_student_result.sum_correct_ansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsum_correct_ansNull() {
                this[this.tabledt_student_result.sum_correct_ansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issum_wrong_ansNull() {
                return this.IsNull(this.tabledt_student_result.sum_wrong_ansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsum_wrong_ansNull() {
                this[this.tabledt_student_result.sum_wrong_ansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isno_of_quesNull() {
                return this.IsNull(this.tabledt_student_result.no_of_quesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setno_of_quesNull() {
                this[this.tabledt_student_result.no_of_quesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isexam_nameNull() {
                return this.IsNull(this.tabledt_student_result.exam_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setexam_nameNull() {
                this[this.tabledt_student_result.exam_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istest_nameNull() {
                return this.IsNull(this.tabledt_student_result.test_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settest_nameNull() {
                this[this.tabledt_student_result.test_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tabledt_student_result.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tabledt_student_result.user_idColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dt_student_result_detailsRow : global::System.Data.DataRow {
            
            private dt_student_result_detailsDataTable tabledt_student_result_details;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dt_student_result_detailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt_student_result_details = ((dt_student_result_detailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string exam_no {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.exam_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exam_no\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.exam_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string test_no {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.test_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'test_no\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.test_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sub_no {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.sub_noColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sub_no\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.sub_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string exam_name {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.exam_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'exam_name\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.exam_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string test_name {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.test_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'test_name\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.test_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string sub_name {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.sub_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sub_name\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.sub_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sum_correct_ans {
                get {
                    try {
                        return ((int)(this[this.tabledt_student_result_details.sum_correct_ansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum_correct_ans\' in table \'dt_student_result_details\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.sum_correct_ansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sum_wrong_ans {
                get {
                    try {
                        return ((int)(this[this.tabledt_student_result_details.sum_wrong_ansColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sum_wrong_ans\' in table \'dt_student_result_details\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.sum_wrong_ansColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string no_of_ques {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.no_of_quesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'no_of_ques\' in table \'dt_student_result_details\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.no_of_quesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user_id {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.user_idColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_id\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.user_idColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string user_name {
                get {
                    try {
                        return ((string)(this[this.tabledt_student_result_details.user_nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'user_name\' in table \'dt_student_result_details\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt_student_result_details.user_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isexam_noNull() {
                return this.IsNull(this.tabledt_student_result_details.exam_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setexam_noNull() {
                this[this.tabledt_student_result_details.exam_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istest_noNull() {
                return this.IsNull(this.tabledt_student_result_details.test_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settest_noNull() {
                this[this.tabledt_student_result_details.test_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issub_noNull() {
                return this.IsNull(this.tabledt_student_result_details.sub_noColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsub_noNull() {
                this[this.tabledt_student_result_details.sub_noColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isexam_nameNull() {
                return this.IsNull(this.tabledt_student_result_details.exam_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setexam_nameNull() {
                this[this.tabledt_student_result_details.exam_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Istest_nameNull() {
                return this.IsNull(this.tabledt_student_result_details.test_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Settest_nameNull() {
                this[this.tabledt_student_result_details.test_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issub_nameNull() {
                return this.IsNull(this.tabledt_student_result_details.sub_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsub_nameNull() {
                this[this.tabledt_student_result_details.sub_nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issum_correct_ansNull() {
                return this.IsNull(this.tabledt_student_result_details.sum_correct_ansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsum_correct_ansNull() {
                this[this.tabledt_student_result_details.sum_correct_ansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issum_wrong_ansNull() {
                return this.IsNull(this.tabledt_student_result_details.sum_wrong_ansColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsum_wrong_ansNull() {
                this[this.tabledt_student_result_details.sum_wrong_ansColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isno_of_quesNull() {
                return this.IsNull(this.tabledt_student_result_details.no_of_quesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setno_of_quesNull() {
                this[this.tabledt_student_result_details.no_of_quesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_idNull() {
                return this.IsNull(this.tabledt_student_result_details.user_idColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_idNull() {
                this[this.tabledt_student_result_details.user_idColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuser_nameNull() {
                return this.IsNull(this.tabledt_student_result_details.user_nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuser_nameNull() {
                this[this.tabledt_student_result_details.user_nameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dt_student_resultRowChangeEvent : global::System.EventArgs {
            
            private dt_student_resultRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_resultRowChangeEvent(dt_student_resultRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_resultRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dt_student_result_detailsRowChangeEvent : global::System.EventArgs {
            
            private dt_student_result_detailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_result_detailsRowChangeEvent(dt_student_result_detailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dt_student_result_detailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591